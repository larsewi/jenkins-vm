bundle agent jenkins
{
  methods:
    "remove conflicting packages"
      usebundle => remove_conflicting_packages;
    "install docker certificate"
      usebundle => install_certificate("https://download.docker.com/linux/ubuntu/gpg", "docker");
    "install jenkins certificate"
      usebundle => install_certificate("https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key", "jenkins");
    "add docker and jenkins mirrors"
      usebundle => add_mirrors;
    "install docker and jenkins dependencies"
      usebundle => install_dependencies;
    "docker post install"
      usebundle => docker_post_install;
    "start jenkins service"
      usebundle => start_jenkins_service;
}

bundle agent remove_conflicting_packages
{
  vars:
    "packages"
      slist => {
        "docker.io",
        "docker-doc",
        "docker-compose",
        "docker-compose-v2",
        "podman-docker",
        "containerd",
        "runc",
      };

  packages:
    "$(packages)"
      policy => "absent",
      package_module => apt_get;
}

bundle agent install_certificate(url, name)
{
  vars:
    "cert"
      data => url_get("$(url)", "{}");

  files:
    "/etc/apt/keyrings/."
      create => "true",
      perms => m("0755");
    "/etc/apt/keyrings/$(name).asc"
      perms => m("a+r"),
      content => "$(cert[content])";

  packages:
    "ca-certificates"
      policy => "present";
}

bundle agent add_mirrors
{
  vars:
    "arch"
      string => execresult("$(paths.dpkg) --print-architecture", noshell);
    "docker_mirror"
      slist => { "deb [arch=$(arch) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(sys.os_release[VERSION_CODENAME]) stable" };
    "jenkins_mirror"
      slist => { "deb [arch=$(arch) signed-by=/etc/apt/keyrings/jenkins.asc] https://pkg.jenkins.io/debian-stable binary/" };

  files:
    "/etc/apt/sources.list.d/docker.list"
      create => "true",
      edit_line => insert_lines("$(docker_mirror)");
    "/etc/apt/sources.list.d/jenkins.list"
      create => "true",
      edit_line => insert_lines("$(jenkins_mirror)");
}

bundle agent install_dependencies
{
  vars:
    "packages"
      slist => {
        "docker-ce",
        "docker-ce-cli",
        "containerd.io",
        "docker-buildx-plugin",
        "docker-compose-plugin",
        "default-jre",
        "jenkins",
      };

  packages:
    "$(packages)"
      policy => "present",
      package_module => apt_get;
}

body members docker_members
{
  include => { "jenkins", "vagrant" };
}

bundle agent docker_post_install
{
  groups:
    "docker"
      policy => "present",
      members => docker_members;

  files:
    "/var/lib/jenkins/hudson.model.UpdateCenter.xml"
      edit_line => regex_replace(
        "https://updates.jenkins.io/update-center.json",
        "http://updates.jenkins.io/update-center.json"
      ),
      classes => if_repaired("restart_jenkins_service");

  services:
    restart_jenkins_service::
      "jenkins"
        service_policy => "restart";
}

bundle agent start_jenkins_service
{
  services:
    "jenkins"
      service_policy => "start";
}
